openli (1.0.8-1) unstable; urgency=medium

  * Fix bugs that were causing HI1Operation messages to not be generated
    under certain circumstances.
  * Fix bugs that were causing HI1Operation messages to have an incorrect
    sequence number if generated following an intercept configuration
    file reload.

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Wed, 11 Nov 2020 17:22:52 +1300

openli (1.0.7-2) unstable; urgency=medium

  * Fix potential hang in postinst script when generating a password
    for the provisioner authentication database.

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Wed, 11 Nov 2020 10:36:18 +1300

openli (1.0.7-1) unstable; urgency=medium

  * OpenLI provisioner and mediator no longer run as root.
  * Mediators will now send HI1Operation messages to the relevant
    agencies whenever an intercept is activated, deactivated or
    modified.
  * Fix bug where a reconnecting mediator would not receive any
    messages broadcast by a provisioner (such as new LIID mappings).

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Tue, 10 Nov 2020 14:29:35 +1300

openli (1.0.6-1) unstable; urgency=medium

  * Added authentication layer to the provisioner REST API. If enabled,
    REST API requests must either provide a valid API key or use Digest
    Authentication to confirm that the request has been issued by an
    authorised party.
  * Collectors may now use rabbitmq to "buffer" encoded records before
    sending them to their mediator. The records will be persistently
    buffered to disk, so we are not solely relying on memory to retain
    records for mediators that have failed or disappeared.
  * Added RADIUS-friendly hashing option for collector input sources.
    This option should be used on all inputs that are going to receive
    RADIUS packets. Resolves issues with RADIUS packet ordering that
    required users to decrease the number of processing threads for
    their RADIUS inputs to 1.
  * Added scripts (openli-prov-authsetup.sh and openli-prov-adduser.sh) to
    assist in the creation and management of user credentials for the
    provisioner REST API.
  * Completely refactored mediator code to be easier to maintain. This
    in theory should have no impact on end users, but any code refactor
    may introduce new bugs so we want to make sure users know that we have
    done this.
  * Fixed bug where multiple configuration changes to an agency handover
    would not be applied correctly on the mediator.
  * Fixed crash when a RADIUS user has been removed but still had an
    outstanding request. The crash would occur if we then later saw the
    response.
  * Fixed hanging when collector processes a RADIUS packet that has been
    padded to the minimum frame size.
  * Fix provisioner crashes after expiring an unauthorised client that has
    connected to one of its listening ports.
  * Components that are not using TLS will now immediately exit after
    connecting to a component that is using TLS (and vice versa).

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Wed, 2 Sep 2020 17:17:53 +1200

openli (1.0.5-2) unstable; urgency=medium

  * Fix missing dependency on rsyslog

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Thu, 28 May 2020 10:46:43 +1200

openli (1.0.5-1) unstable; urgency=medium

  * Add config option to disable joining VOIP calls with the same
    SDP O identifier into the same CIN.
  * Add HTTPS support to REST API.
  * Improve IPv6 address handling in RADIUS parser.
  * Fix erroneous "duplicate intercept" announcements bug.
  * Add support for RADIUS sessions with both IPv4 and IPv6 addresses.
  * Fix log spam caused by RADIUS Accounting-On messages.
  * Fix "bad file descriptor" bug in mediator.
  * Add ability to intercept multiple RTP streams from the same SIP session.
  * Fix segfaults when RADIUS messages are missing a Username field.
  * Fix silent logoff bugs when a RADIUS session has two identifiers.
  * Fix slow memory leak related to RADIUS session expiry.
  * Fix collector segfaults when the host runs out of memory.
  * Fix bug where a reconnecting mediator would not receive buffered records
    from the collectors.
  * Fix bug where a mediator could steal records intended for another
    mediator if it was using the same IP and port for connections.
  * Fix SSL_write() errors when forwarding records to a mediator.
  * Fix issues where collectors can end up hanging after being halted.
  * Fix bug where a provisioner disconnection would cause the collectors
    to drop all of the mediators, rather than continue forwarding records
    until the provisioner returned.
  * Fix minor memory leaks when the provisioner disconnects and reconnects.

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Fri, 08 May 2020 11:46:29 +1200

openli (1.0.5-1~prerel01) UNRELEASED; urgency=medium

  * Pre-release packaging of 1.0.5 to allow clients to beta-test
    recent RADIUS parsing fixes.
  * Add config option to disable joining VOIP calls with the same
    SDP O identifier into the same CIN.
  * Add HTTPS support to REST API.
  * Improve IPv6 address handling in RADIUS parser.
  * Fix erroneous "duplicate intercept" announcements bug.
  * Add support for RADIUS sessions with both IPv4 and IPv6 addresses.
  * Fix log spam caused by RADIUS Accounting-On messages.
  * Fix "bad file descriptor" bug in mediator.
  * Add ability to intercept multiple RTP streams from the same SIP session.
  * Fix segfaults when RADIUS messages are missing a Username field.
  * Fix silent logoff bugs when a RADIUS session has two identifiers.
  * Fix slow memory leak related to RADIUS session expiry.

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Thu, 02 Apr 2020 16:54:21 +1300

openli (1.0.5-1~sdpofix) UNRELEASED; urgency=medium

  * Pre-release packaging of 1.0.5 to allow clients to beta-test
    the SDP O patch.
  * Add config option to disable joining VOIP calls with the same
    SDP O identifier into the same CIN.
  * Add HTTPS support to REST API.

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Thu, 13 Feb 2020 13:58:21 +1300

openli (1.0.4-1) unstable; urgency=medium

  * Added REST API to provisioner to allow intercepts, agencies and
    core servers to be manipulated by sending HTTP requests to a
    listening socket.
  * Intercept config has been separated from provisioner config.
  * Added support for UMTS (mobile) intercepts using GTP.
  * Allow RADIUS Calling-Station-ID to be used for determining user
    identity.
  * Allow multiple concurrent RADIUS sessions for a single user
    (e.g. simultaneous IPv4 and IPv6 sessions).
  * Many bug fixes (as documented in
    https://github.com/wanduow/openli/wiki/ChangeLog).

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Wed, 18 Dec 2019 10:15:20 +1300

openli (1.0.4-1~gtptest03) UNRELEASED; urgency=medium

  * Pre-release packaging of 1.0.4 for Datora to use for testing the
    new GTP-based mobile interception capabilities.
  * Added support for GTPv1.

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Wed, 18 Dec 2019 10:15:20 +1300

openli (1.0.4-1~gtptest02) UNRELEASED; urgency=medium

  * Pre-release packaging of 1.0.4 for Datora to use for testing the
    new GTP-based mobile interception capabilities.
  * Fixed issue where GTP sessions were not properly tracked if the request
    and response were seen in the wrong order.

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Mon, 9 Dec 2019 11:00:20 +1300

openli (1.0.4-1~gtptest01) UNRELEASED; urgency=medium

  * Pre-release packaging of 1.0.4 for Datora to use for testing the
    new GTP-based mobile interception capabilities.

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Mon, 18 Nov 2019 11:11:20 +1300

openli (1.0.3-1) unstable; urgency=medium

  * Add ability to encrypt inter-component communications using TLS
  * Add support for decapsulating JMirror captures
  * Fix bug where ALU intercepts would erroneously intercept ARP packets
  * Improved log message quality for inter-component connections

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Fri, 16 Aug 2019 11:58:26 +1200

openli (1.0.2-1) unstable; urgency=medium

  * Greatly improved RADIUS processing performance.
  * Fix bug where IPv6 packets were not being intercepted properly.
  * Add ability to configure the collector to periodically log
    statistics about its internal operations.
  * Keep alive messages now include the OpenLI version string inside
    the LIID, so LEAs can now recognise which version of OpenLI is
    being used.
  * Better memory management of clients connected to the provisioner.
  * Rate limit connection attempts by the mediator to the provisioner.

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Tue, 09 Apr 2019 16:41:49 +1200

openli (1.0.1-1) unstable; urgency=medium

  * Fix broken ALU shim parsing code.
  * Fix endless collector disconnects if ALU shim or username changes
    for an intercept without a corresponding LIID change.
  * Fix various minor memory leaks that become problematic if a component
    misbehaves.
  * Fix "null" mediation address bug on the provisioner.
  * Fix zeromq deadlock in collector.
  * RADIUS packets are now no longer considered candidates for an IP CC,
    improving performance under high RADIUS load.
  * Improve documentation of ALU translation support.

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Mon, 25 Mar 2019 15:34:49 +1300

openli (1.0.0-1) unstable; urgency=low

  * Initial release.

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Thu, 22 Nov 2018 02:03:31 +0000


