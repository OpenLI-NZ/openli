openli (1.1.10-1) unstable; urgency=medium

  * RADIUS: Accounting Response packets no longer need to be seen by
    the collector; session state updates are now inferred from
    Accounting Requests automatically without the need to see the
    matching Response.
  * Collector: using multiple forwarding threads now actually
    behaves as expected.
  * Voice: fix bug where the RTP stream might not be intercepted if
    there are multiple intercepts configured for the same target.
  * Mediator: fix bug where a mediator using RabbitMQ would never receive
    intercept records from a collector.
  * SIP: fix bug where SIP sessions using TCP keepalives would not be
    intercepted due to errors in the TCP reassembly code.
  * SIP: fix crash caused by incorrectly freeing a packet that had been
    claimed by the TCP reassembler.
  * SIP: fix bug where SIP messages that do not begin at the start of the
    TCP payload would not be intercepted or used to update the call
    state.

 -- Shane Alcock <salcock@searchlight.nz>  Tue, 22 Oct 2024 15:46:51 +1300

openli (1.1.9-1) unstable; urgency=medium

  * RADIUS: fix crash that can occur under very rare circumstances due to
    a dangling user record pointer in an old unmatched request.
  * RADIUS: fix bug where CINs for all RADIUS sessions were zero.
  * Fix potential silent exit in collector if a packet cannot be
    copied to be sent to another thread.
  * Mobile data: move processing of GTP traffic / sessions into separate worker
    threads.
  * Mobile data: add (experimental) support for intercepting GTP-U traffic for
    sessions where the GTP-C identity matches an intercept target.
    Only applies to GTPv2 sessions -- no CC interception is performed for
    GTPv1 sessions (i.e UMTS-CCs).
  * Mobile data: add support for intercepting GTP-C traffic for intercept
    targets and encoding it as either EPS-IRIs (for GTPv2) or UMTS-IRIs
    (for GTPv1).
  * Mobile data: IP-based mobile intercepts are now encoded as EPS-CCs,
    instead of UMTS-CCs.
  * Mediator: allow RabbitMQ internal password to be specified using
    either "RMQlocalpass" OR "RMQinternalpass" config options, so
    as to match the existing documentation.
  * SIP: fix bug where RTP would not be intercepted if the SIP traffic
    is proxied back to the original source IP.
  * SIP: fix assertion failure when reassembling TCP SIP traffic that
    happens to have trailing bytes (such as an extra '\r\n' sequence).
  * SIP: fix double frees that could occur when reassembling TCP SIP
    traffic.
  * Removed some internally defined OID consts and replaced them with
    ones defined by libwandder.

 -- Shane Alcock <salcock@searchlight.nz>  Fri, 27 Sep 2024 10:47:19 +1200

openli (1.1.8-1) unstable; urgency=medium

  * Collector: fix crash in sync_voip thread if an invalid SIP packet
    is encountered.
  * Collector: add a single zero byte to the list of recognised SIP
    keep alives.
  * Collector: fix crash that can occur if an IP is mapped to a
    RADIUS session more than once.
  * Add config option to specify the country where an agency has
    jurisdiction, which allows us to support country-specific
    requirements for HI1 operations and keep alive messages.
  * Keep alive messages for NL agencies now conform to the ETSI-IP.nl
    requirements.
  * Use '--' instead of 'NA' as the auth and delivery country code for
    keep alives when we do not know the country code for the receiving
    agency.

 -- Shane Alcock <salcock@searchlight.nz>  Wed, 14 Aug 2024 10:13:28 +1200

openli (1.1.7-1) unstable; urgency=medium

  * Collector: fix file descriptor leak caused by timers in SMS worker
    threads.
  * Collector: fix bug where a forwarder thread would be unable to exit
    if the collector is trying to shut down due to an error.
  * Collector: fix another race condition that can cause a collector to
    hang when it is being halted.
  * Collector: VoIP sync thread now recognises more SIP keep alive
    payloads (including eXoSIP keep alives) so will no longer complain
    about invalid SIP payload when these KAs are observed.
  * Collector: fix segfault that can occur if an IP data session is
    assigned to more than 5 IP addresses.
  * Collector: fix segfault in VoIP sync thread if the expiry timer for
    a completed call cannot be properly created (e.g. if we run out of
    file descriptors).

 -- Shane Alcock <salcock@searchlight.nz>  Tue, 23 Jul 2024 09:53:36 +1200

openli (1.1.6-1) unstable; urgency=medium

  * Fix incorrect encoding of userLocationInformation field.
  * Add support for IMSI and IMEI as target identifiers for mobile
    data (IP) intercepts.
  * Added new parameter for IP intercepts: mobileident -- this is
    used to indicate whether the user identifier for a mobile data
    intercept is an MSISDN, IMEI or IMSI.
  * Add support for including SIP packets in pcapdisk output for
    VoIP intercepts.
  * Fix bug where mediators receiving message from a collector via
    RabbitMQ would be disconnected due to regular consumer timeouts.
    This in turn should resolve issues where old IRIs or CCs would be
    periodically retransmitted by a mediator to the LEA.
  * Fix memory errors when reassembling TCP segments in the collector
    libtrace threads.
  * Generate error log messages when a component (either mediator or
    collector) cannot publish to RabbitMQ due to the connection being
    blocked.

 -- Shane Alcock <salcock@searchlight.nz>  Mon, 1 Jul 2024 09:57:07 +1200

openli (1.1.5-1) unstable; urgency=medium

  * Fix bug where pcap disk output was not producing pcap files for IP
    intercepts that were wrapped in a vendor mirroring header.
  * Fix bug where changing an existing intercept to use the
    pcapdisk agency would not result in pcap files being written for
    that intercept.
  * Mediator: fixed log spam of "pcap file opened" messages when in fact
    no file was being created due to the lack of intercepted traffic for
    that intercept.
  * SMTP: add ability to detect automatic email forwarding by searching
    for certain message headers in the email content. The set of headers
    to search for must be defined by the user in the collector configuration
    file.
  * Remove target identities from collector log messages.
  * Enable TCP keep alives on all inter-component communications sessions.
  * Fix issue where socket-level errors would not be properly detected on
    the control socket linking the provisioner and a collector.
  * Fix bugs in the TCP reassembly of SIP messages which would prevent
    certain large SIP messages from being properly reassembled.
  * SIP: do not throw a parsing error if a callee is defined using a
    "tel:" URL.
  * Fix assertion failure if a RADIUS session is missing a NASIdentifier
    AVP.
  * RADIUS: do not attempt to remove IP->session mappings that would never
    have existed in the first place.
  * Fix incorrect ETSI encoding of email recipients lists.
  * SIP: add support for extracting target identities from the
    P-Preferred-Identity header (only if `sipallowfromident` is enabled).
  * SIP: fix failure to intercept subsequent calls if the 5 tuple for the
    SIP sessions is exactly the same.
  * Mediator: fix failure to acknowledge received RMQ messages when exiting, or
    when a collector disconnects.
  * Mediator: fix memory leak whenever a collector disconnects and subsequently
    reconnects.
  * Collector: fix bug where intercepts that re-use an LIID may not produce
    CCs in certain circumstances.

 -- Shane Alcock <salcock@searchlight.nz>  Wed, 08 May 2024 11:31:48 +1200

openli (1.1.4-1) unstable; urgency=medium

  * Add support for intercepting SMS messages delivered via SIP (i.e.
    when transporting SMS using an IMS).
  * IPMMIRI: include targetLocation field if a P-Access-Network-Info
    field is in the SIP header and the location is provided as a
    3GPP-E-UTRAN-FDD. targetLocation is encoded as a UserLocationInformation
    element within an epsLocation element.
  * POP3: fix oversight preventing POP3 identities from being extracted for
    sessions using the AUTH command.
  * Email: fix segfault if no user identity has been found for an otherwise
    authenticated session.
  * IMAP/POP3: fix bug introduced in 1.1.3 that would produce duplicate
    IRIs when the intercept target was the sender of the email.
  * IMAP: fix bug where PLAIN AUTH credentials could be replaced with
    garbage if the `maskimapcreds` configuration option was disabled.
  * POP3: fix bug where `maskpop3creds` configuration option was ignored.
  * SMTP: include all recipients in email-receive IRIs, regardless of
    whether they are intercept targets or not.
  * IMAP: fix segfault when processing compressed IMAP messages.
  * IMAP: fix segfault when parsing an incomplete UID command.
  * IMAP: disable "unmatched reply" log messages.
  * IMAP: do not generate IRIs for FETCH commands that do not fetch
    mail content (e.g. fetching FLAGS ).
  * IMAP: fix bug where upload IRIs were not including the mail sender.
  * Email: fragmented IP packets are now reassembled by email workers
    before processing.
  * Email: fix double-free on collector exit if a default email domain
    had been configured.
  * Pcap output: do not generate IRIs for VoIP intercepts that are being
    written using the `pcapdisk` agency.
  * Pcap output: fix bug introduced in 1.1.3 that was causing IPMMCCs to
    not be written to the pcap files.

 -- Shane Alcock <salcock@searchlight.nz>  Sat, 20 Jan 2024 17:17:25 +1300

openli (1.1.3-1) unstable; urgency=high

  * Fix poor mediator throughput caused by suboptimal RabbitMQ
    usage.
  * Improved performance when writing intercepts to pcap files on
    disk using the pcapdisk agency.
  * Fix issue where intercepted records for pcapdisk intercepts would
    not persist in RabbitMQ for more than 60 seconds.
  * Fix memory errors in the mediator that occur when a RabbitMQ
    message is larger than expected.
  * SIP: fix issue where an INVITE sent by the callee (e.g. a codec
    update) would prevent the following RTP from being intercepted.
  * SIP: fix issue where a target would not be correctly matched if
    there were additional parameters in the SIP username.
  * SIP: fix issue where RTP would not be intercepted if a 180 message
    was used to announce an RTP port.
  * VoIP: fix bug where an intercepted call over IPv6 would be
    described as IPv4 in the IRI.
  * Added support for Cisco Tap as a vendor mirroring format.
  * Fixed high CPU usage by mediator if a collector has disconnected.

 -- Shane Alcock <salcock@searchlight.nz>  Fri, 10 Nov 2023 15:40:14 +1300

openli (1.1.2-1) unstable; urgency=medium

  * Email ingestion: add support for PART_ID field and attempt
    to reorder received messages based on PART_ID value.
  * Email ingestion: fix segfault that can occur if an incomplete
    multi-part message is received by the ingestion socket.
  * Email ingestion: fix parsing failure caused by packet segmentation.
  * IMAP: fix interception failures when the COMPRESS extension
    is used by a session.
  * REST API: fix segfaults when using PUT to modify existing
    intercepts / agencies.
  * IMAP: fix bad regex that was causing problems when intercepting
    mail content containing unbalanced parentheses.
  * REST API: added new openliversion/ endpoint which returns the
    version of the provisioner software.
  * SMTP: emit all SMTP messages and replies as CCs, not just the
    DATA message.
  * SMTP: produce "email-receive" IRI if a recipient is an intercept
    target, i.e. if the email comes from an external mail provider.
  * SMTP: if present, use AUTH to derive the sender identity. Include
    sender validity info in IRIs.
  * SMTP: improve handling of unexpected or bogus commands, so
    now interception won't cease if we see a command we don't understand.
  * SIP: don't crash if an authorization field has an empty username.
  * SIP: fix issue where RTP would not be intercepted if the "c="
    field in the SDP announcement is after the first "m=" field.
  * SIP: CANCEL will now correctly move an intercepted call into the
    end state.
  * HI1 Operations: send HI1 operations messages for intercepts with
    specific start and end times at the expected time, not when the
    intercept is configured.

 -- Shane Alcock <salcock@searchlight.nz>  Tue, 10 Oct 2023 16:19:41 +1300

openli (1.1.1-1) unstable; urgency=medium

  * Add ability to encrypt CC and IRI payload, as per Annex G of
    ETSI TS 102 232-1 (AES-192-CBC encryption only thus far).
  * Fix bug where certain intercept config changes were not always
    passed on to collectors if the changes occurred while the
    provisioner was down.
  * Fix double free bug when halting the VOIP sync thread for a
    collector.
  * Fix bug where a RADIUS session could produce CCs but not IRIs,
    if the Username AVP happened to match a target CSID.
  * Fix linking failure if the collector is built on its own.
  * Correct various problems with the IMAP parsing for FETCH replies.
  * Fix segmentation faults when the email ingestion socket receives
    an incomplete message.
  * Fix memory errors in the REST API when a field is assigned an
    empty string value.

 -- Shane Alcock <shane@alcock.co.nz>  Mon, 31 Jul 2023 11:26:50 +1200

openli (1.1.0-1) unstable; urgency=medium

  Changes since 1.0.15 release:
  * Mediator now uses rabbitmq for buffering intercept records before sending
    them on to their respective agency.
  * Mediator now dedicates separate threads to receiving data from each
    collector, and separate threads to forwarding intercepts on to each agency.
    This will make better use of multiple cores on a mediator device.
  * Added support for email interception (as per ETSI TS 102 232-2 standard).
  * Added ability to configure intercepts (of any type) to export only IRIs, or
    only CCs.
  * Include target-Information field in HI1 Operation messages.
  * Fixed bug where encoded raw IP data (e.g. intercepted GTP) was missing a
    preceding LIID when sent to the mediator.
  * Fixed REST API bug that prevented DELETE requests from working for the
    coreserver endpoint.
  * Fixed bug where IPMM IRIs were using the IRI type "IRI-Report" instead of
    the expected "IRI-Continue".
  * Fixed bug where VoIP intercepts would not produce CCs if the corresponding
    SIP session included a 183 message without any RTP port or IP information
    in it.
  * Fixed bug where endtimes for VOIP intercepts could not be modified using
    the REST API.

 -- Shane Alcock <shane@alcock.co.nz>  Wed, 14 Jun 2023 18:53:26 +1200

openli (1.1.0-1~rc03) unstable; urgency=medium

  * Fix IMAP bug where OpenLI could generate partial download IRIs
    without also generating corresponding CCs.

 -- Shane Alcock <shane@alcock.co.nz>  Thu, 25 May 2023 19:09:19 +1200

openli (1.1.0-1~rc02) unstable; urgency=medium

  * Fix bug where VOIP intercepts would not produce CCs if an RTP
    endpoint was announced in the "200 OK" message instead of a
    "183" message.

 -- Shane Alcock <shane@alcock.co.nz>  Thu, 25 May 2023 11:27:40 +1200

openli (1.1.0-1~rc01) unstable; urgency=medium

  * Add configuration options for the email ingestion socket.
  * Include target-Information in HI1 operation messages.
  * Fix incorrect IRI types for IPMM IRIs.
  * mediator postinst: configure RMQ to listen on localhost only, if
    installed on our behalf.
  * Tidy up numerous compiler warnings.

 -- Shane Alcock <shane@alcock.co.nz>  Tue, 23 May 2023 12:00:12 +1200

openli (1.1.0-1~beta06) unstable; urgency=medium

  * Fix REST API bug where intercepts returned by GET requests would
    include a "tomediate" field instead of "outputhandovers".

 -- Shane Alcock <shane@alcock.co.nz>  Wed, 19 Apr 2023 11:43:41 +1200

openli (1.1.0-1~beta05) unstable; urgency=medium

  * IMAP and POP3: we can now extract the email sender from the mail
    body to include in email IRIs

 -- Shane Alcock <shane@alcock.co.nz>  Mon, 03 Apr 2023 09:59:02 +1200

openli (1.1.0-1~beta04) unstable; urgency=medium

  * Add support for email interception for the POP3 protocol.

 -- Shane Alcock <shane@alcock.co.nz>  Fri, 24 Feb 2023 15:16:08 +1300

openli (1.1.0-1~beta03) unstable; urgency=medium

  * Fix various errors when parsing IMAP AUTHENTICATE PLAIN messages.
  * Fix bug where not all IMAP APPEND content was being included in
    exported CC records.
  * Fix install error when upgrading mediator from a previous 1.1.0
    beta version.

 -- Shane Alcock <shane@alcock.co.nz>  Fri, 03 Feb 2023 15:24:51 +1300

openli (1.1.0-1~beta02) unstable; urgency=medium

  * Fix bug where DELETE was not being properly applied to coreservers
    via the REST API
  * Fix IMAP parsing error when "\r\n" appears inside parentheses
  * Add ability to configure intercepts as IRI or CC only intercepts
  * Fix IMAP parsing error when parsing LOGIN commands
  * Add credential masking for IMAP LOGIN commands
  * Add config option for disabling IMAP credential masking
  * Add config options to change email session timeouts

 -- Shane Alcock <shane@alcock.co.nz>  Tue, 24 Jan 2023 09:22:18 +1300

openli (1.1.0-1~beta01) unstable; urgency=medium

  * Mediator now uses RabbitMQ to buffer any intercept records that
    have been received from collectors but not yet pushed onto a handover.
  * Each connected collector is now handled in a separate thread.
  * Each agency is now handled in a separate thread.
  * Email interception (ETSI TS 102 232-2) is now supported for SMTP and IMAP
    protocols.

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Sat, 12 Nov 2022 15:13:10 +1300

openli (1.0.15-1) unstable; urgency=medium

  * Fix crash when SDP identities are shared amongst multiple Call-IDs.
  * Fix bad logic that meant `sipignoresdpo` option was ignored in certain
    situations.

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Wed, 15 Jun 2022 10:27:39 +1200

openli (1.0.14-1) unstable; urgency=medium

  * Fix bug where VoIP intercepts would stop collecting media traffic
    if an INVITE was issued during the ongoing call.
  * SIP target usernames now support the use of a leading '*' as a wildcard
    (e.g. to represent different combinations of dialing codes that may
     precede a phone number identifier).

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Wed, 13 Apr 2022 14:55:36 +1200

openli (1.0.13-1) unstable; urgency=medium

  * RADIUS parser now copes with situations where an assigned IP is
    not included in the access-Accept message.
  * SIP parser now copes with SIP URIs that are just "sip:" followed
    by an IP address.

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Wed, 09 Feb 2022 12:46:13 +1300

openli (1.0.12-1) unstable; urgency=medium

  * Fixed bugs where changes to certain intercept properties
    were not being applied to the encoded ETSI header fields.
  * Fixed bug where the 'username' property for a static IP
    intercept was not being encoded as the ETSI targetUsername
    field.
  * Fixed bug where digest hashes added to the provisioner auth
    database using our helper script were not readable by the
    provisioner itself.
  * Fixed crash when processing a SIP message that is spread across
    multiple packets.

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Mon, 8 Nov 2021 14:08:42 +1300

openli (1.0.11-1) unstable; urgency=medium

  * Improved collector encoding performance by saving and reusing
    previously-encoded records that have the exact same layout.
  * Improved encoding performance at high packet rates by sending encoded
    records to the forwarding thread in batches.
  * Mediators will now actively avoid splitting a record across multiple send
    calls wherever possible.
  * Fixed bug where a collector would simply stop forwarding records for an
    LIID on to the mediator for no apparent reason, especially when more
    encoder threads were being used.
  * Fixed bug where encoding jobs would be lost without being seen by the
    encoder thread.
  * Fixed performance-related issue where an overwhelmed mediator would never
    send data to its handovers.
  * Fixed crash in mediator after a handover is disconnected for failing to
    send a keep alive response.
  * BER encoding optimization has been removed.
  * Fix issue where collector memory usage would be extremely high when under
    load.

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Wed, 21 Jul 2021 10:56:13 +1200

openli (1.0.10-1) unstable; urgency=medium

  * Intercepts can now be configured with a start and/or end time (unix
    timestamp only).
  * SIP-based VOIP intercepts will now check the `P-Asserted-Identity` and
    `Remote-Party-ID` fields for matches against the target identities.
  * Added config option to allow the "From:" URI in a SIP packet to be used for
    target identification. Defaults to not allowed.
  * Added config options to adjust pcap output filenames and compression levels.
  * Fixed bug where the agencyID for an intercept could not be modified via the
    REST API.
  * Fixed oversight where the set of active pcap intercepts was not properly
    updated whenever intercepts are deactivated.
  * Fixed various crashes and memory leaks when reloading the collector config
    file.
  * Improve performance when analysing SIP traffic while having a large number
    of active VOIP intercepts.

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Tue, 26 Apr 2021 16:30:17 +1200

openli (1.0.9-2) unstable; urgency=medium

  * Rebuild package to support latest libtrace release

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Mon, 22 Mar 2021 11:28:34 +1300

openli (1.0.9-1) unstable; urgency=medium

  * Reduce collector CPU usage when the forwarding thread is idle.
  * Fix HI1Operation messages that were not able to be decoded by LEAs.
  * Allow a BPF filter to be applied to any collector input.
  * Remove dependency on rsyslog -- syslog-ng can now be used instead, if
    desired.
  * Allow use of BER encoding for faster record encoding by the collector.

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Thu, 21 Jan 2021 15:58:17 +1300

openli (1.0.8-1) unstable; urgency=medium

  * Fix bugs that were causing HI1Operation messages to not be generated
    under certain circumstances.
  * Fix bugs that were causing HI1Operation messages to have an incorrect
    sequence number if generated following an intercept configuration
    file reload.

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Wed, 11 Nov 2020 17:22:52 +1300

openli (1.0.7-2) unstable; urgency=medium

  * Fix potential hang in postinst script when generating a password
    for the provisioner authentication database.

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Wed, 11 Nov 2020 10:36:18 +1300

openli (1.0.7-1) unstable; urgency=medium

  * OpenLI provisioner and mediator no longer run as root.
  * Mediators will now send HI1Operation messages to the relevant
    agencies whenever an intercept is activated, deactivated or
    modified.
  * Fix bug where a reconnecting mediator would not receive any
    messages broadcast by a provisioner (such as new LIID mappings).

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Tue, 10 Nov 2020 14:29:35 +1300

openli (1.0.6-1) unstable; urgency=medium

  * Added authentication layer to the provisioner REST API. If enabled,
    REST API requests must either provide a valid API key or use Digest
    Authentication to confirm that the request has been issued by an
    authorised party.
  * Collectors may now use rabbitmq to "buffer" encoded records before
    sending them to their mediator. The records will be persistently
    buffered to disk, so we are not solely relying on memory to retain
    records for mediators that have failed or disappeared.
  * Added RADIUS-friendly hashing option for collector input sources.
    This option should be used on all inputs that are going to receive
    RADIUS packets. Resolves issues with RADIUS packet ordering that
    required users to decrease the number of processing threads for
    their RADIUS inputs to 1.
  * Added scripts (openli-prov-authsetup.sh and openli-prov-adduser.sh) to
    assist in the creation and management of user credentials for the
    provisioner REST API.
  * Completely refactored mediator code to be easier to maintain. This
    in theory should have no impact on end users, but any code refactor
    may introduce new bugs so we want to make sure users know that we have
    done this.
  * Fixed bug where multiple configuration changes to an agency handover
    would not be applied correctly on the mediator.
  * Fixed crash when a RADIUS user has been removed but still had an
    outstanding request. The crash would occur if we then later saw the
    response.
  * Fixed hanging when collector processes a RADIUS packet that has been
    padded to the minimum frame size.
  * Fix provisioner crashes after expiring an unauthorised client that has
    connected to one of its listening ports.
  * Components that are not using TLS will now immediately exit after
    connecting to a component that is using TLS (and vice versa).

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Wed, 2 Sep 2020 17:17:53 +1200

openli (1.0.5-2) unstable; urgency=medium

  * Fix missing dependency on rsyslog

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Thu, 28 May 2020 10:46:43 +1200

openli (1.0.5-1) unstable; urgency=medium

  * Add config option to disable joining VOIP calls with the same
    SDP O identifier into the same CIN.
  * Add HTTPS support to REST API.
  * Improve IPv6 address handling in RADIUS parser.
  * Fix erroneous "duplicate intercept" announcements bug.
  * Add support for RADIUS sessions with both IPv4 and IPv6 addresses.
  * Fix log spam caused by RADIUS Accounting-On messages.
  * Fix "bad file descriptor" bug in mediator.
  * Add ability to intercept multiple RTP streams from the same SIP session.
  * Fix segfaults when RADIUS messages are missing a Username field.
  * Fix silent logoff bugs when a RADIUS session has two identifiers.
  * Fix slow memory leak related to RADIUS session expiry.
  * Fix collector segfaults when the host runs out of memory.
  * Fix bug where a reconnecting mediator would not receive buffered records
    from the collectors.
  * Fix bug where a mediator could steal records intended for another
    mediator if it was using the same IP and port for connections.
  * Fix SSL_write() errors when forwarding records to a mediator.
  * Fix issues where collectors can end up hanging after being halted.
  * Fix bug where a provisioner disconnection would cause the collectors
    to drop all of the mediators, rather than continue forwarding records
    until the provisioner returned.
  * Fix minor memory leaks when the provisioner disconnects and reconnects.

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Fri, 08 May 2020 11:46:29 +1200

openli (1.0.5-1~prerel01) UNRELEASED; urgency=medium

  * Pre-release packaging of 1.0.5 to allow clients to beta-test
    recent RADIUS parsing fixes.
  * Add config option to disable joining VOIP calls with the same
    SDP O identifier into the same CIN.
  * Add HTTPS support to REST API.
  * Improve IPv6 address handling in RADIUS parser.
  * Fix erroneous "duplicate intercept" announcements bug.
  * Add support for RADIUS sessions with both IPv4 and IPv6 addresses.
  * Fix log spam caused by RADIUS Accounting-On messages.
  * Fix "bad file descriptor" bug in mediator.
  * Add ability to intercept multiple RTP streams from the same SIP session.
  * Fix segfaults when RADIUS messages are missing a Username field.
  * Fix silent logoff bugs when a RADIUS session has two identifiers.
  * Fix slow memory leak related to RADIUS session expiry.

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Thu, 02 Apr 2020 16:54:21 +1300

openli (1.0.5-1~sdpofix) UNRELEASED; urgency=medium

  * Pre-release packaging of 1.0.5 to allow clients to beta-test
    the SDP O patch.
  * Add config option to disable joining VOIP calls with the same
    SDP O identifier into the same CIN.
  * Add HTTPS support to REST API.

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Thu, 13 Feb 2020 13:58:21 +1300

openli (1.0.4-1) unstable; urgency=medium

  * Added REST API to provisioner to allow intercepts, agencies and
    core servers to be manipulated by sending HTTP requests to a
    listening socket.
  * Intercept config has been separated from provisioner config.
  * Added support for UMTS (mobile) intercepts using GTP.
  * Allow RADIUS Calling-Station-ID to be used for determining user
    identity.
  * Allow multiple concurrent RADIUS sessions for a single user
    (e.g. simultaneous IPv4 and IPv6 sessions).
  * Many bug fixes (as documented in
    https://github.com/wanduow/openli/wiki/ChangeLog).

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Wed, 18 Dec 2019 10:15:20 +1300

openli (1.0.4-1~gtptest03) UNRELEASED; urgency=medium

  * Pre-release packaging of 1.0.4 for Datora to use for testing the
    new GTP-based mobile interception capabilities.
  * Added support for GTPv1.

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Wed, 18 Dec 2019 10:15:20 +1300

openli (1.0.4-1~gtptest02) UNRELEASED; urgency=medium

  * Pre-release packaging of 1.0.4 for Datora to use for testing the
    new GTP-based mobile interception capabilities.
  * Fixed issue where GTP sessions were not properly tracked if the request
    and response were seen in the wrong order.

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Mon, 9 Dec 2019 11:00:20 +1300

openli (1.0.4-1~gtptest01) UNRELEASED; urgency=medium

  * Pre-release packaging of 1.0.4 for Datora to use for testing the
    new GTP-based mobile interception capabilities.

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Mon, 18 Nov 2019 11:11:20 +1300

openli (1.0.3-1) unstable; urgency=medium

  * Add ability to encrypt inter-component communications using TLS
  * Add support for decapsulating JMirror captures
  * Fix bug where ALU intercepts would erroneously intercept ARP packets
  * Improved log message quality for inter-component connections

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Fri, 16 Aug 2019 11:58:26 +1200

openli (1.0.2-1) unstable; urgency=medium

  * Greatly improved RADIUS processing performance.
  * Fix bug where IPv6 packets were not being intercepted properly.
  * Add ability to configure the collector to periodically log
    statistics about its internal operations.
  * Keep alive messages now include the OpenLI version string inside
    the LIID, so LEAs can now recognise which version of OpenLI is
    being used.
  * Better memory management of clients connected to the provisioner.
  * Rate limit connection attempts by the mediator to the provisioner.

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Tue, 09 Apr 2019 16:41:49 +1200

openli (1.0.1-1) unstable; urgency=medium

  * Fix broken ALU shim parsing code.
  * Fix endless collector disconnects if ALU shim or username changes
    for an intercept without a corresponding LIID change.
  * Fix various minor memory leaks that become problematic if a component
    misbehaves.
  * Fix "null" mediation address bug on the provisioner.
  * Fix zeromq deadlock in collector.
  * RADIUS packets are now no longer considered candidates for an IP CC,
    improving performance under high RADIUS load.
  * Improve documentation of ALU translation support.

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Mon, 25 Mar 2019 15:34:49 +1300

openli (1.0.0-1) unstable; urgency=low

  * Initial release.

 -- Shane Alcock <shane.alcock@waikato.ac.nz>  Thu, 22 Nov 2018 02:03:31 +0000


