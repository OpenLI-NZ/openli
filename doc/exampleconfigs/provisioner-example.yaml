# Example configuration file for an OpenLI provisioner
#  * (C) 2025 Telefónica Innovación Digital (laura.dominguez.cespedes@telefonica.com)
#  * (C) 2023 by Original Author(shane@alcock.co.nz)

# Listen for incoming collectors on 10.0.0.1:9001
clientaddr: 10.0.0.1
clientport: 9001

# Listen for incoming mediators on 10.0.0.1:12001
mediationaddr: 10.0.0.1
mediationport: 12001

# Listen for intercept configuration updates via the REST API on 10.0.0.1:9009
updateaddr: 10.0.0.1
updateport: 9009

# If you wish to encrypt your internal OpenLI communications between
# components, these three options must be point to valid certificates / keys
# to be used for TLS encryption. Make sure that if you enable TLS on
# one OpenLI component, that you also do so on all of the others.
#
# Leave these commented out for unencrypted inter-component communications.
# The TLS certificates and keys can be generated using PQC cryptography algorithms, based on OQS-Provider list of algorithms. 
# As well, is required to modify the "Openssl.cnf" file to add the desired QS Key Exchange Methods (KEM) desired.
#
tlscert: /etc/openli/openli-provisioner-crt.pem
tlskey: /etc/openli/openli-provisioner-key.pem
tlsca: /etc/openli/openli-ca-crt.pem

# Current intercept configuration will be stored in the following file.
# Make sure that this file is writable by the OpenLI provisioner!
intercept-config-file: /etc/openli/running-intercept-config.yaml

# If set to yes, any writes made by the provisioner to the intercept config
# file will be encrypted. Enabling this option will require an encryption
# password to be passed into the provisioner via the command line using the
# -K flag.
encrypt-intercept-config-file: no

# If set to 'yes', RTP comfort noise packets will NOT be intercepted by
# all collectors associated with this provisioner. Only enable this option
# if an LEA reports difficulty with decoding your intercepted RTP streams.
voip-ignorecomfort: no

# Location of the SQLite3 database where credentials and API keys are stored
# for authorised access to the REST API. If this option is not present,
# then the REST API can be used without authentication.
# See https://github.com/OpenLI-NZ/openli/wiki/Authenticated-REST-API for more
# information about authentication and the REST API.

# restauthdb: /var/lib/openli/provauth.db

# The passphrase required to decrypt the Authentication database for the
# REST API. If this option is not present, then the REST API can be used
# without authentication.

# restauthkey: mydbpassphrase
