# Example configuration file for an OpenLI collector

# Connect to a provisioner that is listening on 10.0.0.1:9001
provisioneraddr: 10.0.0.1
provisionerport: 9001

# Unique ID string for my network (16 chars max)
operatorid: WAND

# Unique ID string for the location of my collector (16 chars max)
networkelementid: OpenLIdevlab

# Unique ID string for this collector, just in case I have more than one
# at this location. Optional if I only have one collector at this location
# (8 chars max)
interceptpointid: test01

# Number of threads to use to track sequence numbers for each intercept.
# You probably don't need to change this.
seqtrackerthreads: 1

# Number of threads to use to encode intercepted packets as ETSI records.
# Increasing this number *may* improve performance if encoding is a
# bottleneck for your collector deployment.
encoderthreads: 2

# Number of threads to use to forward encoded ETSI records to the
# mediators. You probably don't need to change this.
forwardingthreads: 1

# Number of minutes between each dump of performance statistics to the
# logger. Set to zero to disable this extra logging altogether.
logstatfrequency: 5

# List of ALU LI mirrors that we are acting as a translation module for.
# NOTE: This should be the IP and port of the *recipient* of the ALU
#       intercept mirror, not the host that is doing the mirroring.
# NOTE: ALU LI translation is a special case that won't apply to most users,
#       but the configuration is included here for completeness
alumirrors:
 - ip: 10.100.0.233
   port: 8500


# List of Juniper mirrors that we are acting as a mediator for.
# NOTE: This should be the IP and port of the *recipient* of the mirrored
#       traffic, not the host that is doing the mirroring.
# NOTE: JMirror translation is a special case that only applies to Juniper
#       networks, but the configuration is included here for completeness
jmirrors:
 - ip: 192.168.200.77
   port: 30030



# List of interfaces to capture packets on
inputs:
 - uri: eth1            # capture on interface eth1
   threads: 2           # use 2 processing threads for this input

 - uri: dpdk:0000:42:00.0     # capture on DPDK interface with this PCI address
   threads: 4                 # use 4 processing threads for this input
