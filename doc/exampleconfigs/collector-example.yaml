# Example configuration file for an OpenLI collector
#  * (C) 2025 Telefónica Innovación Digital (laura.dominguez.cespedes@telefonica.com)
#  * (C) 2024 by Original Author(shane@alcock.co.nz)

# Connect to a provisioner that is listening on 10.0.0.1:9001
provisioneraddr: 10.0.0.1
provisionerport: 9001

# Unique ID string for my network (16 chars max)
operatorid: WAND

# Unique ID string for the location of my collector (16 chars max)
networkelementid: OpenLIdevlab

# Unique ID string for this collector, just in case I have more than one
# at this location. Optional if I only have one collector at this location
# (8 chars max)
interceptpointid: test01

# Number of threads to use to track sequence numbers for each intercept.
# You probably don't need to change this.
seqtrackerthreads: 1

# Number of threads to use to encode intercepted packets as ETSI records.
# Increasing this number *may* improve performance if encoding is a
# bottleneck for your collector deployment.
encoderthreads: 2

# Number of threads to use to forward encoded ETSI records to the
# mediators. You probably don't need to change this.
forwardingthreads: 1

# Number of threads to use for parsing GTP traffic to intercept mobile
# data sessions. Can be set to zero if the collector will not see GTP traffic.
gtpthreads: 1

# Number of threads to use for parsing SIP traffic to intercept voice calls
# and SMS messages over SIP. You must have at least one SIP thread.
sipthreads: 2

# Number of threads to use for parsing email traffic (SMTP, IMAP, and POP3).
# Can be set to zero if the collector will not see email traffic, or you are
# not required to perform email interception.
emailthreads: 1

# Set this to yes if you want to override the policy of not trusting the
# contents of the "From:" field in SIP packets (as this field is not
# validated and can be easily spoofed).
sipallowfromident: no

# Set this to yes if you want OpenLI to replace any plain text or base64
# encoded credentials (i.e. passwords) in intercepted IMAP traffic with
# the characters "XXX". Note that this masking will only be applied to
# IMAP traffic captured using an email intercept, not an IP intercept.
maskimapcreds: yes

# Set this to yes if you want OpenLI to replace any plain text credentials
# (i.e. passwords) in intercepted POP3 traffic with
# the characters "XXX". Note that this masking will only be applied to
# POP3 traffic captured using an email intercept, not an IP intercept.
maskpop3creds: yes

# Email users who supply a domain-less username during authentication will
# be assumed to have an email address of '<username>@<defaultemaildomain>'.
# Obviously, you would want to replace this config option with the domain
# that your email addresses are assigned to.
defaultemaildomain: example.org

# Number of minutes between each dump of performance statistics to the
# logger. Set to zero to disable this extra logging altogether.
logstatfrequency: 5

# List of ALU LI mirrors that we are acting as a translation module for.
# NOTE: This should be the IP and port of the *recipient* of the ALU
#       intercept mirror, not the host that is doing the mirroring.
# NOTE: ALU LI translation is a special case that won't apply to most users,
#       but the configuration is included here for completeness
#alumirrors:
# - ip: 10.100.0.233
#   port: 8500


# If you wish to encrypt your internal OpenLI communications between
# components, these three options must be point to valid certificates / keys
# to be used for TLS encryption. Make sure that if you enable TLS on
# one OpenLI component, that you also do so on all of the others.
# The TLS certificates and keys can be generated using PQC cryptography algorithms, based on OQS-Provider list of algorithms.
#
# This will offer Quantum-Safe in the asymmetric process of the TLS handshake.
# As well, is required to modify the "Openssl.cnf" file to add the desired QS Key Exchange Methods (KEM) desired.
#
# Leave these commented out for unencrypted inter-component communications.
tlscert: /etc/openli/openli-collector-crt.pem
tlskey: /etc/openli/openli-collector-key.pem
tlsca: /etc/openli/openli-ca-crt.pem

# If set to 'no', intercepted packets streamed by this collector to the
# mediator will not be encrypted -- this may be desirable for performance
# reasons. Make sure you set the corresponding option on the mediator as
# well.
etsitls: yes

# If set to 'yes', SIP packets with the same identifiers in the SDP O field
# will *not* be assumed to be different legs of the same SIP call. Some
# VOIP implementations do not generate sufficiently unique O fields for
# each call and therefore, for those implementations, the SDP O data needs to
# ignored to prevent OpenLI from erroneously including extra SIP traffic in a
# VOIP intercept.
# Defaults to 'no', because SDP O fields *should* be unique and this is
# clearly stated in the ETSI LI spec that O fields are meant to be used
# in this way to group call legs.
# sipignoresdpo: no

# List of Juniper mirrors that we are acting as a mediator for.
# NOTE: This should be the IP and port of the *recipient* of the mirrored
#       traffic, not the host that is doing the mirroring.
# NOTE: JMirror translation is a special case that only applies to Juniper
#       networks, but the configuration is included here for completeness
jmirrors:
 - ip: 192.168.200.77
   port: 30030

# Times (in minutes) to wait before expiring an idle email session for
# each supported email protocol.
emailsessiontimeouts:
  - smtp: 5
  - imap: 30
  - pop3: 10

# RFC-822 headers in the mail body where the presence of a intercept target's
# email address would indicate that the email was automatically forwarded by
# the target (and therefore the target should be considered as the sender
# of the email).
#
# emailforwardingheaders:
#   - "X-Sieve-Redirected-From"


# Email ingestion service configuration -- instead of intercepting email
# by capturing traffic from an interface, OpenLI can also receive email
# application messages that are POSTed to this HTTP service. This is
# useful for mail service operators who would prefer to use custom plugins
# on their mail servers to push relevant mail content to OpenLI, rather
# than having to mirror traffic at the TCP/IP layers.
#
# More detail on the ingestion service and the expected formatting of
# the messages that this service can receive is available on the OpenLI
# wiki (https://github.com/OpenLI-NZ/openli/wiki).
#
emailingest:
  listenaddress: 10.230.1.1     # the IP address for the service to listen on
  listenport: 19999             # the port for the service to listen on
  requiretls: yes               # only allow connections via HTTPS (note
                                # that you will need to provide the 'tlscert'
                                # and 'tlskey' options elsewhere in this
                                # file for this to work)
  authpassword: apassword       # if set, POSTed messages will be rejected
                                # unless they are sent with digest auth and
                                # the provided password does not match the
                                # value for this option.
  enabled: yes                  # set to "no" to disable this service

# If set to true, then the collector will use RabbitMQ to buffer encoded
# ETSI records to be forwarded to the mediators. The buffered packets will
# be persisted to disk and therefore will still be available if the collector
# process terminates.
# If set to false, then the collector will buffer the records in memory
# instead. Buffered packets will be lost if the collector is restarted, and
# your buffer capacity will be limited by the amount of RAM you have spare.
RMQenabled: false

# The username to use when authenticating against a local RabbitMQ instance
RMQname: "rmquser"

# The password to use when authenticating against a local RabbitMQ instance
RMQpass: "rmqpassword"

# List of interfaces to capture packets on
inputs:
 - uri: eth1            # capture on interface eth1
   threads: 2           # use 2 processing threads for this input

 - uri: eth2            # capture on interface eth2
   threads: 2           # use 2 processing threads for this input
   hasher: radius       # hash packets based on RADIUS session

# - uri: dpdk:0000:42:00.0     # capture on DPDK interface with this PCI address
#   threads: 4                 # use 4 processing threads for this input
#   hasher: bidirectional      # hash based on bidirectional flow 5-tuple

# List of IP/port pairs to use for listening for intercepted traffic sent
# by vendor equipment using the X2/X3 interfaces
#
# Note that you can have as many X2/X3 inputs as you like, and that you must
# provide a TLS certificate for the listener to serve to clients to prove
# your identity.
x2x3inputs:
 - listenaddr: 10.230.1.1
   listenport: 25000
   certfile: /etc/openli/openli-collector-crt.pem
